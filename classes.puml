@startuml
skinparam classAttributeIconSize 0

package "Model" {
  class DataVisualizer {
	- data : Data
	- registry : PluginRegistry
	+ loadFile(path, formatId)
	+ visualize(creatorId, outPath)
	+ listPlugins() : List<PluginMetadata>
	+ activatePlugin(id)
	+ deactivatePlugin(id)
  }

  class PluginRegistry {
	- formats : Map<String, FormatPlugin>
	- creators: Map<String, CreatorPlugin>
	+ discoverPlugins(dir)
	+ initAll(ctx)
	+ shutdownAll()
	+ getMetadata()
  }

  class DataModel <<Observable>> {
	- visualizer: DataVisualizer
	- currentData: Data
	+ loadFile(path, fmt)
	+ setCreator(id)
	+ getVisualization()
  }
}

package "Domain Model" {
  abstract class Data {
	+ accept(CreatorPlugin)
  }
  class Node {
	- children: List<Data>
  }
  class Leaf {
	- value: String
  }
  Data <|-- Node
  Data <|-- Leaf
}

package "Plugin-Interfaces" {
  interface FormatPlugin {
	+ id(): String
	+ metadata(): PluginMetadata
	+ init(CoreContext)
	+ toInternalFormat(file): Data
	+ shutdown()
  }
  interface CreatorPlugin {
	+ id(): String
	+ metadata(): PluginMetadata
	+ createVisualization(Data, outFile): Image
	+ shutdown()
  }
}

package "View" {
  interface Observer {
	+ update()
  }

  class MainWindow implements Observer {
	- treeView: DataTreeView
	- vizView: VisualizationView
	- plugView: PluginListView
	+ update()
  }

  class DataTreeView
  class VisualizationView
  class PluginListView
}

package "Controller" {
  class DataController {
	- model: DataModel
	- view: MainWindow
	+ onOpen(path)
	+ onFormatSelect(id)
	+ onPluginToggle(id)
  }
}

package "Plugins" {
  class JsonParser
  class YamlParser
  class AsciiCreator
  class SvgCreator
  FormatPlugin <|.. JsonParser
  FormatPlugin <|.. YamlParser
  CreatorPlugin <|.. AsciiCreator
  CreatorPlugin <|.. SvgCreator
}

'--- Beziehungen ---
DataVisualizer --> PluginRegistry
DataVisualizer -l-> Data
PluginRegistry --> FormatPlugin
PluginRegistry --> CreatorPlugin

DataModel -l-> DataVisualizer
DataModel ..> Observer

MainWindow --> DataTreeView
MainWindow --> VisualizationView
MainWindow --> PluginListView

MainWindow <-u- DataController
DataController -l-> DataModel

@enduml
